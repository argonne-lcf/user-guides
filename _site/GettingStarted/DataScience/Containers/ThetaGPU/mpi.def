Bootstrap: docker
From: ubuntu:20.04

%files
	../source/* /usr/source/
	../submit.sh /usr/

%environment
	export PATH=$PATH:/openmpi/install/bin
   export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/openmpi/install/lib

%post
	#### INSTALL BASE PACKAGES NEEDED FOR MPI APPLICATIONS AND PYTHON3 ####
	DEBIAN_FRONTEND=noninteractive
	apt-get update -y \
	&& DEBIAN_FRONTEND=noninteractive \
	&& apt-get install -y build-essential libfabric-dev libibverbs-dev gfortran wget \
	&& apt-get install -y python3 python3-distutils python3-pip gcc

	#### DOWNLOAD AND INSTALL MPICH AND MPI4PY ####
	# Source is available at http://www.mpich.org/static/downloads/
	# See installation guide of target MPICH version
	# Ex: https://www.mpich.org/static/downloads/4.0.2/mpich-4.0.2-installguide.pdf
	# These options are passed to the steps below
	OPENMPI_VERSION_A="4.0"
	OPENMPI_VERSION_B="4.0.5"
	OPENMPI_CONFIGURE_OPTIONS="--prefix=/openmpi/install --disable-wrapper-rpath --disable-wrapper-runpath"
	OPENMPI_MAKE_OPTIONS="-j"
	mkdir -p openmpi
	cd /openmpi
	wget https://download.open-mpi.org/release/open-mpi/v${OPENMPI_VERSION_A}/openmpi-${OPENMPI_VERSION_B}.tar.gz
	tar xfz openmpi-${OPENMPI_VERSION_B}.tar.gz  --strip-components=1
   ./configure ${OPENMPI_CONFIGURE_OPTIONS}
   make install ${OPENMPI_MAKE_OPTIONS}
	
	export PATH=$PATH:/openmpi/install/bin
   export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/openmpi/install/lib

	pip install mpi4py

	#### BUILD FILES ####
	chmod +x /usr/submit.sh
	mpicc -o /usr/source/mpi_hello_world /usr/source/mpi_hello_world.c

%runscript
	exec /usr/submit.sh "$@"

%labels
    MAINTAINER Aditya atanikanti@anl.gov

%help
    This is container is used to illustrate a mpi based def file to build a container running python and c programs. 
	To build the container use singularity build --fakeroot mpi.sif mpi.def
